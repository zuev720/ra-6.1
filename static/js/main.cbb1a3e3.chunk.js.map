{"version":3,"sources":["Components/Label/Label.jsx","Components/Input/Input.jsx","Components/Button/Button.jsx","Components/Text/Text.jsx","Components/Functions/getTime.js","Components/Clock/ClockComponent.jsx","Components/WorldClockApp/WorldClockApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["Label","htmlFor","this","props","id","className","text","React","Component","Input","name","type","value","onChange","handleChange","pattern","required","Button","onClick","click","children","Text","getTime","offset","userOffset","Date","getTimezoneOffset","ClockComponent","state","date","timerId","setInterval","tick","setState","clearInterval","size","renderNumbers","hourMarksWidth","hourMarksLength","onDeleteClock","WorldClockApp","timeZone","timeObjects","bind","handleFormSubmit","e","target","preventDefault","clockObj","elements","filter","elem","reduce","obj","trim","arrayClockObj","push","townName","arrayClocks","onSubmit","map","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbb1a3e3.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Label extends React.Component {\n    render() {\n        return (<label htmlFor={this.props.id} className={'label'}>{this.props.text}</label>)\n    }\n}\n","import React from 'react';\n\nexport class Input extends React.Component {\n    render() {\n        return <input\n            id={this.props.name}\n            type=\"text\"\n            className={'inputForm'}\n            name={this.props.name}\n            value={this.props.value}\n            onChange={this.props.handleChange}\n            pattern={this.props.pattern}\n            required={true}\n        />\n    }\n}\n","import React from 'react';\n\nexport class Button extends React.Component {\n    render() {\n        return (\n            <button id={this.props.id} className={this.props.className} type={this.props.type} onClick={this.props.click}>\n                {this.props.children}\n            </button>\n        )\n    }\n}\n","import React from 'react';\n\nexport class Text extends React.Component {\n    render() {\n        return <p className={'clockText'}>{this.props.children}</p>\n    }\n}\n","export function getTime(offset) {\n    const diffGMTAndLocal = -(new Date().getTimezoneOffset() / 60);\n    const userOffset =  offset - diffGMTAndLocal;\n\n    return new Date( new Date().getTime() + (userOffset * 3600 * 1000))\n}\n","import React from 'react';\nimport Clock from 'react-clock';\nimport 'react-clock/dist/Clock.css';\nimport {Text} from '../Text/Text';\nimport {Button} from '../Button/Button';\nimport {getTime} from '../Functions/getTime';\n\nexport class ClockComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {date: getTime(this.props.userOffset)};\n    }\n\n    componentDidMount() {\n        this.timerId = setInterval(() => this.tick(), 1000);\n    }\n\n    tick() {\n        this.setState({date: getTime(this.props.userOffset)});\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId)\n    }\n\n    render() {\n        return (\n            <li className={'ClockComponent'}>\n                <Text>{this.props.name}</Text>\n                <div className={'clockComponentBody'}>\n                    <Clock value={this.state.date} size={120} renderNumbers={true} hourMarksWidth={2} hourMarksLength={8}/>\n                    <Button id={this.props.name} className={'deleteClockButton'} type={'button'} click={this.props.onDeleteClock}>&#9587;</Button>\n                </div>\n            </li>\n        )\n    }\n}\n","import React from 'react';\nimport {Label} from '../Label/Label';\nimport {Input} from '../Input/Input';\nimport {Button} from '../Button/Button';\nimport './WorldClockApp.css';\nimport {ClockComponent} from '../Clock/ClockComponent';\n\nexport class WorldClockApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {name: '', timeZone: '', timeObjects: []};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.onDeleteClock = this.onDeleteClock.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    handleFormSubmit(e) {\n        e.preventDefault();\n        const clockObj = [...e.target.elements].filter(elem => elem.name).reduce((obj, elem) => {\n            obj[elem.name] = elem.value.trim();\n            return obj;\n        }, {});\n        const arrayClockObj = this.state.timeObjects;\n        arrayClockObj.push(clockObj);\n        this.setState({name: '', timeZone: '', timeObjects: arrayClockObj});\n    }\n\n    onDeleteClock(e) {\n        const townName = e.target.id;\n        const arrayClocks = this.state.timeObjects.filter((elem) => elem.name !== townName);\n        this.setState({timeObjects: arrayClocks});\n    }\n\n    render() {\n        return (\n            <div className={'WorldClockApp'}>\n                <form className={'WorldClockForm'} onSubmit={this.handleFormSubmit}>\n                    <div className={'inputBlock'}>\n                        <Label id={'name'} text={'Название'}/>\n                        <Input name={'name'} handleChange={this.handleChange} value={this.state.name} pattern={'^[A-Za-zА-Яа-яЁё ]+$'}/>\n                    </div>\n                    <div className={'inputBlock'}>\n                        <Label id={'timeZone'} text={'Временная зона'}/>\n                        <Input name={'timeZone'} handleChange={this.handleChange} value={this.state.timeZone} pattern={'^[ 0-9]+$'}/>\n                    </div>\n                    <Button className={'formButton'} type={'submit'}>Добавить</Button>\n                </form>\n                <ul className={'ClockList'}>\n                    {this.state.timeObjects.map((elem, index) =>\n                        <ClockComponent\n                            key={index}\n                            size={'120px'}\n                            userOffset={elem.timeZone}\n                            name={elem.name}\n                            onDeleteClock={this.onDeleteClock}\n                        />\n                    )}\n                </ul>\n            </div>\n        )\n    }\n}\n","import './App.css';\nimport {WorldClockApp} from './Components/WorldClockApp/WorldClockApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WorldClockApp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}